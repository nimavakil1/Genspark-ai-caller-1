<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title || 'AI Sales Dashboard' %></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #667eea;
            --secondary-color: #764ba2;
            --success-color: #28a745;
            --warning-color: #ffc107;
            --danger-color: #dc3545;
            --info-color: #17a2b8;
            --sidebar-bg: #2c3e50;
            --sidebar-active: #3498db;
        }

        body {
            background-color: #f8f9fa;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .sidebar {
            background: linear-gradient(180deg, var(--sidebar-bg) 0%, #34495e 100%);
            min-height: 100vh;
            width: 250px;
            position: fixed;
            left: 0;
            top: 0;
            z-index: 1000;
            transition: transform 0.3s ease;
        }

        .sidebar.collapsed {
            transform: translateX(-100%);
        }

        .sidebar-header {
            padding: 1rem;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
            text-align: center;
        }

        .sidebar-header h4 {
            color: white;
            margin: 0;
            font-size: 1.2rem;
        }

        .sidebar-menu {
            list-style: none;
            padding: 0;
            margin: 1rem 0;
        }

        .sidebar-menu li {
            margin: 0;
        }

        .sidebar-menu a {
            display: flex;
            align-items: center;
            padding: 1rem 1.5rem;
            color: rgba(255, 255, 255, 0.8);
            text-decoration: none;
            transition: all 0.3s ease;
            border-left: 3px solid transparent;
        }

        .sidebar-menu a:hover,
        .sidebar-menu a.active {
            background-color: rgba(255, 255, 255, 0.1);
            color: white;
            border-left-color: var(--sidebar-active);
        }

        .sidebar-menu i {
            width: 20px;
            margin-right: 10px;
            text-align: center;
        }

        .main-content {
            margin-left: 250px;
            padding: 0;
            transition: margin-left 0.3s ease;
        }

        .main-content.expanded {
            margin-left: 0;
        }

        .top-navbar {
            background: white;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
            padding: 1rem 2rem;
            display: flex;
            justify-content: between;
            align-items: center;
        }

        .content-area {
            padding: 2rem;
        }

        .stat-card {
            background: white;
            border-radius: 10px;
            padding: 1.5rem;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            border-left: 4px solid var(--primary-color);
            transition: transform 0.2s ease;
        }

        .stat-card:hover {
            transform: translateY(-2px);
        }

        .stat-card.success {
            border-left-color: var(--success-color);
        }

        .stat-card.warning {
            border-left-color: var(--warning-color);
        }

        .stat-card.danger {
            border-left-color: var(--danger-color);
        }

        .stat-card.info {
            border-left-color: var(--info-color);
        }

        .stat-icon {
            font-size: 2.5rem;
            opacity: 0.8;
        }

        .btn-primary {
            background: linear-gradient(45deg, var(--primary-color), var(--secondary-color));
            border: none;
            border-radius: 8px;
        }

        .btn-primary:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);
        }

        .card {
            border: none;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .card-header {
            background: linear-gradient(45deg, var(--primary-color), var(--secondary-color));
            color: white;
            border-radius: 10px 10px 0 0 !important;
            border: none;
        }

        .table th {
            border-top: none;
            background-color: #f8f9fa;
            font-weight: 600;
        }

        .badge {
            font-size: 0.75rem;
            padding: 0.4em 0.8em;
        }

        .modal-content {
            border: none;
            border-radius: 15px;
        }

        .modal-header {
            background: linear-gradient(45deg, var(--primary-color), var(--secondary-color));
            color: white;
            border-radius: 15px 15px 0 0;
        }

        .form-control, .form-select {
            border-radius: 8px;
            border: 2px solid #e9ecef;
        }

        .form-control:focus, .form-select:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
        }

        .loading {
            display: none;
            text-align: center;
            padding: 2rem;
        }

        .sidebar-toggle {
            display: none;
        }

        @media (max-width: 768px) {
            .sidebar {
                transform: translateX(-100%);
            }
            
            .sidebar.show {
                transform: translateX(0);
            }
            
            .main-content {
                margin-left: 0;
            }
            
            .sidebar-toggle {
                display: inline-block;
            }
            
            .content-area {
                padding: 1rem;
            }
        }
    </style>
</head>
<body>
    <!-- Sidebar -->
    <nav class="sidebar" id="sidebar">
        <div class="sidebar-header">
            <h4><i class="fas fa-phone-volume me-2"></i>AI Sales</h4>
            <small class="text-light">Receipt Roll System</small>
        </div>
        <ul class="sidebar-menu">
            <li><a href="#" class="nav-link active" data-section="overview"><i class="fas fa-chart-pie"></i>Overview</a></li>
            <li><a href="#" class="nav-link" data-section="customers"><i class="fas fa-users"></i>Customers</a></li>
            <li><a href="#" class="nav-link" data-section="calls"><i class="fas fa-phone"></i>Calls</a></li>
            <li><a href="#" class="nav-link" data-section="products"><i class="fas fa-box"></i>Products</a></li>
            <li><a href="#" class="nav-link" data-section="orders"><i class="fas fa-shopping-cart"></i>Orders</a></li>
            <li><a href="#" class="nav-link" data-section="analytics"><i class="fas fa-chart-line"></i>Analytics</a></li>
            <li><a href="#" class="nav-link" data-section="settings"><i class="fas fa-cog"></i>Settings</a></li>
        </ul>
        <div class="mt-auto p-3">
            <button class="btn btn-outline-light btn-sm w-100" onclick="logout()">
                <i class="fas fa-sign-out-alt me-2"></i>Logout
            </button>
        </div>
    </nav>

    <!-- Main Content -->
    <div class="main-content" id="mainContent">
        <!-- Top Navigation -->
        <nav class="top-navbar">
            <div class="d-flex align-items-center">
                <button class="btn btn-link sidebar-toggle me-3" onclick="toggleSidebar()">
                    <i class="fas fa-bars"></i>
                </button>
                <h5 class="mb-0" id="pageTitle">Dashboard Overview</h5>
            </div>
            <div class="d-flex align-items-center">
                <span class="me-3">Welcome, <strong><%= user.first_name || user.username %></strong></span>
                <img src="https://via.placeholder.com/32x32/667eea/ffffff?text=<%= (user.first_name || user.username).charAt(0).toUpperCase() %>" 
                     class="rounded-circle" alt="Avatar">
            </div>
        </nav>

        <!-- Content Area -->
        <div class="content-area">
            <!-- Overview Section -->
            <div id="overview-section" class="content-section">
                <!-- Stats Cards -->
                <div class="row mb-4">
                    <div class="col-lg-3 col-md-6 mb-3">
                        <div class="stat-card">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <h6 class="text-muted mb-2">Total Customers</h6>
                                    <h3 class="mb-0" id="totalCustomers">-</h3>
                                    <small class="text-muted">Active accounts</small>
                                </div>
                                <div class="stat-icon text-primary">
                                    <i class="fas fa-users"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-3 col-md-6 mb-3">
                        <div class="stat-card success">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <h6 class="text-muted mb-2">Receipt Roll Users</h6>
                                    <h3 class="mb-0" id="receiptRollCustomers">-</h3>
                                    <small class="text-muted">Target customers</small>
                                </div>
                                <div class="stat-icon text-success">
                                    <i class="fas fa-receipt"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-3 col-md-6 mb-3">
                        <div class="stat-card warning">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <h6 class="text-muted mb-2">Calls (30 days)</h6>
                                    <h3 class="mb-0" id="totalCalls">-</h3>
                                    <small class="text-muted"><span id="callSuccessRate">-</span>% success rate</small>
                                </div>
                                <div class="stat-icon text-warning">
                                    <i class="fas fa-phone"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-3 col-md-6 mb-3">
                        <div class="stat-card info">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <h6 class="text-muted mb-2">Revenue (30 days)</h6>
                                    <h3 class="mb-0" id="totalRevenue">-</h3>
                                    <small class="text-muted"><span id="totalOrders">-</span> orders</small>
                                </div>
                                <div class="stat-icon text-info">
                                    <i class="fas fa-euro-sign"></i>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Recent Activities -->
                <div class="row">
                    <div class="col-lg-8">
                        <div class="card">
                            <div class="card-header">
                                <h5 class="mb-0"><i class="fas fa-clock me-2"></i>Recent Activities</h5>
                            </div>
                            <div class="card-body">
                                <div id="recentActivities">
                                    <div class="loading">
                                        <i class="fas fa-spinner fa-spin"></i> Loading activities...
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="card">
                            <div class="card-header">
                                <h5 class="mb-0"><i class="fas fa-tasks me-2"></i>Quick Actions</h5>
                            </div>
                            <div class="card-body">
                                <div class="d-grid gap-2">
                                    <button class="btn btn-primary" onclick="showSection('customers')">
                                        <i class="fas fa-user-plus me-2"></i>Add Customer
                                    </button>
                                    <button class="btn btn-outline-primary" onclick="showSection('calls')">
                                        <i class="fas fa-phone-plus me-2"></i>Log Call
                                    </button>
                                    <button class="btn btn-outline-primary" onclick="showSection('products')">
                                        <i class="fas fa-box me-2"></i>Manage Products
                                    </button>
                                    <button class="btn btn-outline-primary" onclick="downloadCustomerTemplate()">
                                        <i class="fas fa-download me-2"></i>Customer Template
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Customers Section -->
            <div id="customers-section" class="content-section" style="display: none;">
                <div class="row mb-3">
                    <div class="col-md-8">
                        <h4>Customer Management</h4>
                    </div>
                    <div class="col-md-4 text-end">
                        <button class="btn btn-primary me-2" onclick="showAddCustomerModal()">
                            <i class="fas fa-user-plus me-2"></i>Add Customer
                        </button>
                        <button class="btn btn-outline-primary" onclick="showUploadModal()">
                            <i class="fas fa-upload me-2"></i>Upload CSV
                        </button>
                    </div>
                </div>

                <!-- Customer Filters -->
                <div class="card mb-3">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-3">
                                <input type="text" class="form-control" id="customerSearch" placeholder="Search customers...">
                            </div>
                            <div class="col-md-2">
                                <select class="form-select" id="statusFilter">
                                    <option value="all">All Status</option>
                                    <option value="active">Active</option>
                                    <option value="inactive">Inactive</option>
                                </select>
                            </div>
                            <div class="col-md-2">
                                <select class="form-select" id="receiptRollFilter">
                                    <option value="all">All Customers</option>
                                    <option value="true">Receipt Roll Users</option>
                                    <option value="false">Others</option>
                                </select>
                            </div>
                            <div class="col-md-3">
                                <button class="btn btn-primary me-2" onclick="loadCustomers()">
                                    <i class="fas fa-search me-1"></i>Search
                                </button>
                                <button class="btn btn-outline-secondary" onclick="exportCustomers()">
                                    <i class="fas fa-download me-1"></i>Export
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Customers Table -->
                <div class="card">
                    <div class="card-body">
                        <div id="customersTable">
                            <div class="loading">
                                <i class="fas fa-spinner fa-spin"></i> Loading customers...
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Other sections placeholder -->
            <div id="calls-section" class="content-section" style="display: none;">
                <h4>Call Management</h4>
                <p class="text-muted">Call management features coming soon...</p>
            </div>

            <div id="products-section" class="content-section" style="display: none;">
                <h4>Product Management</h4>
                <p class="text-muted">Product management features coming soon...</p>
            </div>

            <div id="orders-section" class="content-section" style="display: none;">
                <h4>Order Management</h4>
                <p class="text-muted">Order management features coming soon...</p>
            </div>

            <div id="analytics-section" class="content-section" style="display: none;">
                <h4>Analytics & Reports</h4>
                <p class="text-muted">Analytics dashboard coming soon...</p>
            </div>

            <div id="settings-section" class="content-section" style="display: none;">
                <h4>Settings</h4>
                <p class="text-muted">System settings coming soon...</p>
            </div>
        </div>
    </div>

    <!-- Add Customer Modal -->
    <div class="modal fade" id="addCustomerModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add New Customer</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="addCustomerForm">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">Company Name *</label>
                                    <input type="text" class="form-control" name="company_name" required>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">Contact Person</label>
                                    <input type="text" class="form-control" name="contact_person">
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">Email</label>
                                    <input type="email" class="form-control" name="email">
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">Phone</label>
                                    <input type="tel" class="form-control" name="phone">
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">Mobile</label>
                                    <input type="tel" class="form-control" name="mobile">
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">VAT Number</label>
                                    <input type="text" class="form-control" name="vat_number">
                                </div>
                            </div>
                        </div>

                        <div class="mb-3">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" name="uses_receipt_rolls" id="usesReceiptRolls">
                                <label class="form-check-label" for="usesReceiptRolls">
                                    Uses Receipt Rolls
                                </label>
                            </div>
                        </div>

                        <h6 class="mb-3">Invoice Address</h6>
                        <div class="row">
                            <div class="col-md-8">
                                <div class="mb-3">
                                    <label class="form-label">Street</label>
                                    <input type="text" class="form-control" name="invoice_address_street">
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label class="form-label">Number</label>
                                    <input type="text" class="form-control" name="invoice_address_number">
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label class="form-label">Postal Code</label>
                                    <input type="text" class="form-control" name="invoice_address_postal_code">
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label class="form-label">City</label>
                                    <input type="text" class="form-control" name="invoice_address_city">
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="mb-3">
                                    <label class="form-label">Country</label>
                                    <input type="text" class="form-control" name="invoice_address_country" value="Belgium">
                                </div>
                            </div>
                        </div>

                        <div class="mb-3">
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" name="delivery_same_as_invoice" id="deliverySameAsInvoice" checked>
                                <label class="form-check-label" for="deliverySameAsInvoice">
                                    Delivery address same as invoice address
                                </label>
                            </div>
                        </div>

                        <div id="deliveryAddressSection" style="display: none;">
                            <h6 class="mb-3">Delivery Address</h6>
                            <div class="row">
                                <div class="col-md-8">
                                    <div class="mb-3">
                                        <label class="form-label">Street</label>
                                        <input type="text" class="form-control" name="delivery_address_street">
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label class="form-label">Number</label>
                                        <input type="text" class="form-control" name="delivery_address_number">
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label class="form-label">Postal Code</label>
                                        <input type="text" class="form-control" name="delivery_address_postal_code">
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label class="form-label">City</label>
                                        <input type="text" class="form-control" name="delivery_address_city">
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="mb-3">
                                        <label class="form-label">Country</label>
                                        <input type="text" class="form-control" name="delivery_address_country" value="Belgium">
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Notes</label>
                            <textarea class="form-control" name="notes" rows="3"></textarea>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" onclick="saveCustomer()">
                        <i class="fas fa-save me-2"></i>Save Customer
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Upload CSV Modal -->
    <div class="modal fade" id="uploadModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Upload Customer CSV</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">CSV File (European format - semicolon separated)</label>
                        <input type="file" class="form-control" id="csvFile" accept=".csv">
                        <div class="form-text">
                            Download the template to see the required format.
                        </div>
                    </div>
                    <div class="mb-3">
                        <button class="btn btn-outline-secondary btn-sm" onclick="downloadCustomerTemplate()">
                            <i class="fas fa-download me-2"></i>Download Template
                        </button>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" onclick="uploadCSV()">
                        <i class="fas fa-upload me-2"></i>Upload
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Global variables
        let currentSection = 'overview';
        let currentPage = 1;
        const itemsPerPage = 10;

        // Authentication helper
        function getAuthHeader() {
            const token = localStorage.getItem('auth_token');
            return token ? { 'Authorization': `Bearer ${token}` } : {};
        }

        // Initialize dashboard
        document.addEventListener('DOMContentLoaded', function() {
            // Check authentication
            const token = localStorage.getItem('auth_token');
            if (!token) {
                window.location.href = '/login';
                return;
            }

            // Load initial data
            loadDashboardStats();
            loadRecentActivities();
            
            // Setup event listeners
            setupEventListeners();
        });

        function setupEventListeners() {
            // Navigation
            document.querySelectorAll('.nav-link').forEach(link => {
                link.addEventListener('click', function(e) {
                    e.preventDefault();
                    const section = this.dataset.section;
                    showSection(section);
                });
            });

            // Customer search
            const searchInput = document.getElementById('customerSearch');
            if (searchInput) {
                searchInput.addEventListener('input', debounce(loadCustomers, 500));
            }

            // Delivery address toggle
            const deliveryCheckbox = document.getElementById('deliverySameAsInvoice');
            if (deliveryCheckbox) {
                deliveryCheckbox.addEventListener('change', function() {
                    const section = document.getElementById('deliveryAddressSection');
                    section.style.display = this.checked ? 'none' : 'block';
                });
            }
        }

        // Load dashboard statistics
        async function loadDashboardStats() {
            try {
                const response = await fetch('/api/dashboard/stats', {
                    headers: getAuthHeader()
                });
                
                if (!response.ok) throw new Error('Failed to load stats');
                
                const result = await response.json();
                const stats = result.data.overview;
                
                // Update stat cards
                document.getElementById('totalCustomers').textContent = stats.totalCustomers;
                document.getElementById('receiptRollCustomers').textContent = stats.receiptRollCustomers;
                document.getElementById('totalCalls').textContent = stats.totalCalls;
                document.getElementById('callSuccessRate').textContent = stats.callSuccessRate;
                document.getElementById('totalRevenue').textContent = `€${stats.totalRevenue.toFixed(2)}`;
                document.getElementById('totalOrders').textContent = stats.totalOrders;
                
            } catch (error) {
                console.error('Error loading dashboard stats:', error);
                showAlert('Failed to load dashboard statistics', 'danger');
            }
        }

        // Load recent activities
        async function loadRecentActivities() {
            try {
                const response = await fetch('/api/dashboard/stats', {
                    headers: getAuthHeader()
                });
                
                if (!response.ok) throw new Error('Failed to load activities');
                
                const result = await response.json();
                const activities = result.data.recentActivities;
                
                const activitiesContainer = document.getElementById('recentActivities');
                if (activities.length === 0) {
                    activitiesContainer.innerHTML = '<p class="text-muted">No recent activities</p>';
                    return;
                }

                const activitiesHtml = activities.map(activity => {
                    const icon = activity.type === 'call' ? 'fa-phone' : 'fa-shopping-cart';
                    const color = activity.status === 'completed' ? 'success' : 
                                 activity.status === 'pending' ? 'warning' : 'info';
                    
                    return `
                        <div class="d-flex align-items-center mb-3">
                            <div class="me-3">
                                <i class="fas ${icon} text-${color}"></i>
                            </div>
                            <div class="flex-grow-1">
                                <h6 class="mb-1">${activity.title || 'Unknown'}</h6>
                                <small class="text-muted">
                                    ${activity.type === 'call' ? 'Call' : 'Order'} - 
                                    ${new Date(activity.created_at).toLocaleDateString()}
                                </small>
                            </div>
                            <span class="badge bg-${color}">${activity.status}</span>
                        </div>
                    `;
                }).join('');

                activitiesContainer.innerHTML = activitiesHtml;
                
            } catch (error) {
                console.error('Error loading recent activities:', error);
                document.getElementById('recentActivities').innerHTML = 
                    '<p class="text-muted">Failed to load activities</p>';
            }
        }

        // Show specific section
        function showSection(section) {
            // Hide all sections
            document.querySelectorAll('.content-section').forEach(sec => {
                sec.style.display = 'none';
            });

            // Show selected section
            document.getElementById(`${section}-section`).style.display = 'block';

            // Update navigation
            document.querySelectorAll('.nav-link').forEach(link => {
                link.classList.remove('active');
            });
            document.querySelector(`[data-section="${section}"]`).classList.add('active');

            // Update page title
            const titles = {
                overview: 'Dashboard Overview',
                customers: 'Customer Management',
                calls: 'Call Management',
                products: 'Product Management',
                orders: 'Order Management',
                analytics: 'Analytics & Reports',
                settings: 'Settings'
            };
            document.getElementById('pageTitle').textContent = titles[section] || 'Dashboard';

            currentSection = section;

            // Load section-specific data
            if (section === 'customers') {
                loadCustomers();
            }
        }

        // Load customers
        async function loadCustomers() {
            try {
                const searchTerm = document.getElementById('customerSearch')?.value || '';
                const statusFilter = document.getElementById('statusFilter')?.value || 'all';
                const receiptRollFilter = document.getElementById('receiptRollFilter')?.value || 'all';

                const params = new URLSearchParams({
                    page: currentPage,
                    limit: itemsPerPage,
                    search: searchTerm,
                    status: statusFilter,
                    uses_receipt_rolls: receiptRollFilter
                });

                const response = await fetch(`/api/customers?${params}`, {
                    headers: getAuthHeader()
                });

                if (!response.ok) throw new Error('Failed to load customers');

                const result = await response.json();
                displayCustomers(result.data);

            } catch (error) {
                console.error('Error loading customers:', error);
                showAlert('Failed to load customers', 'danger');
            }
        }

        // Display customers table
        function displayCustomers(data) {
            const container = document.getElementById('customersTable');
            
            if (data.customers.length === 0) {
                container.innerHTML = '<p class="text-muted">No customers found</p>';
                return;
            }

            const tableHtml = `
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>Company</th>
                                <th>Contact</th>
                                <th>Phone</th>
                                <th>Receipt Rolls</th>
                                <th>City</th>
                                <th>Status</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            ${data.customers.map(customer => `
                                <tr>
                                    <td>
                                        <strong>${customer.company_name}</strong>
                                        ${customer.vat_number ? `<br><small class="text-muted">${customer.vat_number}</small>` : ''}
                                    </td>
                                    <td>
                                        ${customer.contact_person || '-'}
                                        ${customer.email ? `<br><small class="text-muted">${customer.email}</small>` : ''}
                                    </td>
                                    <td>
                                        ${customer.phone || '-'}
                                        ${customer.mobile ? `<br><small class="text-muted">${customer.mobile}</small>` : ''}
                                    </td>
                                    <td>
                                        <span class="badge ${customer.uses_receipt_rolls ? 'bg-success' : 'bg-secondary'}">
                                            ${customer.uses_receipt_rolls ? 'Yes' : 'No'}
                                        </span>
                                    </td>
                                    <td>${customer.invoice_address_city || '-'}</td>
                                    <td>
                                        <span class="badge ${customer.status === 'active' ? 'bg-success' : 'bg-secondary'}">
                                            ${customer.status}
                                        </span>
                                    </td>
                                    <td>
                                        <div class="btn-group btn-group-sm">
                                            <button class="btn btn-outline-primary" onclick="editCustomer(${customer.id})" title="Edit">
                                                <i class="fas fa-edit"></i>
                                            </button>
                                            <button class="btn btn-outline-danger" onclick="deleteCustomer(${customer.id})" title="Delete">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            `).join('')}
                        </tbody>
                    </table>
                </div>
                
                ${data.pagination.totalPages > 1 ? `
                    <nav aria-label="Customer pagination">
                        <ul class="pagination justify-content-center">
                            <li class="page-item ${!data.pagination.hasPrev ? 'disabled' : ''}">
                                <a class="page-link" href="#" onclick="changePage(${data.pagination.currentPage - 1})">Previous</a>
                            </li>
                            ${Array.from({ length: data.pagination.totalPages }, (_, i) => i + 1)
                                .map(page => `
                                    <li class="page-item ${page === data.pagination.currentPage ? 'active' : ''}">
                                        <a class="page-link" href="#" onclick="changePage(${page})">${page}</a>
                                    </li>
                                `).join('')}
                            <li class="page-item ${!data.pagination.hasNext ? 'disabled' : ''}">
                                <a class="page-link" href="#" onclick="changePage(${data.pagination.currentPage + 1})">Next</a>
                            </li>
                        </ul>
                    </nav>
                ` : ''}
            `;

            container.innerHTML = tableHtml;
        }

        // Modal functions
        function showAddCustomerModal() {
            const modal = new bootstrap.Modal(document.getElementById('addCustomerModal'));
            modal.show();
        }

        function showUploadModal() {
            const modal = new bootstrap.Modal(document.getElementById('uploadModal'));
            modal.show();
        }

        // Save customer
        async function saveCustomer() {
            try {
                const form = document.getElementById('addCustomerForm');
                const formData = new FormData(form);
                
                const customerData = {
                    company_name: formData.get('company_name'),
                    contact_person: formData.get('contact_person'),
                    email: formData.get('email'),
                    phone: formData.get('phone'),
                    mobile: formData.get('mobile'),
                    vat_number: formData.get('vat_number'),
                    uses_receipt_rolls: formData.has('uses_receipt_rolls'),
                    invoice_address_street: formData.get('invoice_address_street'),
                    invoice_address_number: formData.get('invoice_address_number'),
                    invoice_address_city: formData.get('invoice_address_city'),
                    invoice_address_postal_code: formData.get('invoice_address_postal_code'),
                    invoice_address_country: formData.get('invoice_address_country'),
                    delivery_same_as_invoice: formData.has('delivery_same_as_invoice'),
                    notes: formData.get('notes')
                };

                // Add delivery address if different
                if (!customerData.delivery_same_as_invoice) {
                    customerData.delivery_addresses = [{
                        street: formData.get('delivery_address_street'),
                        number: formData.get('delivery_address_number'),
                        city: formData.get('delivery_address_city'),
                        postal_code: formData.get('delivery_address_postal_code'),
                        country: formData.get('delivery_address_country')
                    }];
                }

                const response = await fetch('/api/customers', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        ...getAuthHeader()
                    },
                    body: JSON.stringify(customerData)
                });

                const result = await response.json();

                if (result.success) {
                    showAlert('Customer created successfully', 'success');
                    bootstrap.Modal.getInstance(document.getElementById('addCustomerModal')).hide();
                    form.reset();
                    loadCustomers();
                } else {
                    showAlert(result.error || 'Failed to create customer', 'danger');
                }

            } catch (error) {
                console.error('Error saving customer:', error);
                showAlert('Failed to save customer', 'danger');
            }
        }

        // Download customer template
        function downloadCustomerTemplate() {
            const link = document.createElement('a');
            link.href = '/api/customers/download/template';
            link.download = 'customers_template.csv';
            link.click();
        }

        // Upload CSV
        async function uploadCSV() {
            try {
                const fileInput = document.getElementById('csvFile');
                const file = fileInput.files[0];

                if (!file) {
                    showAlert('Please select a CSV file', 'warning');
                    return;
                }

                const formData = new FormData();
                formData.append('csvFile', file);

                const response = await fetch('/api/customers/upload/csv', {
                    method: 'POST',
                    headers: getAuthHeader(),
                    body: formData
                });

                const result = await response.json();

                if (result.success) {
                    showAlert(result.message, 'success');
                    bootstrap.Modal.getInstance(document.getElementById('uploadModal')).hide();
                    loadCustomers();
                } else {
                    showAlert(result.error || 'Upload failed', 'danger');
                }

            } catch (error) {
                console.error('Error uploading CSV:', error);
                showAlert('Failed to upload CSV file', 'danger');
            }
        }

        // Export customers
        function exportCustomers() {
            const link = document.createElement('a');
            link.href = '/api/customers/export/csv';
            link.download = `customers_export_${new Date().toISOString().split('T')[0]}.csv`;
            link.click();
        }

        // Edit customer (placeholder)
        function editCustomer(id) {
            showAlert('Edit customer feature coming soon', 'info');
        }

        // Delete customer
        async function deleteCustomer(id) {
            if (!confirm('Are you sure you want to delete this customer?')) {
                return;
            }

            try {
                const response = await fetch(`/api/customers/${id}`, {
                    method: 'DELETE',
                    headers: getAuthHeader()
                });

                const result = await response.json();

                if (result.success) {
                    showAlert('Customer deleted successfully', 'success');
                    loadCustomers();
                } else {
                    showAlert(result.error || 'Failed to delete customer', 'danger');
                }

            } catch (error) {
                console.error('Error deleting customer:', error);
                showAlert('Failed to delete customer', 'danger');
            }
        }

        // Change page
        function changePage(page) {
            currentPage = page;
            loadCustomers();
        }

        // Toggle sidebar
        function toggleSidebar() {
            const sidebar = document.getElementById('sidebar');
            const mainContent = document.getElementById('mainContent');
            
            sidebar.classList.toggle('show');
            mainContent.classList.toggle('expanded');
        }

        // Logout
        function logout() {
            localStorage.removeItem('auth_token');
            window.location.href = '/login';
        }

        // Utility functions
        function showAlert(message, type) {
            // Create alert element
            const alert = document.createElement('div');
            alert.className = `alert alert-${type} alert-dismissible fade show position-fixed`;
            alert.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
            alert.innerHTML = `
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            
            document.body.appendChild(alert);
            
            // Auto-dismiss after 5 seconds
            setTimeout(() => {
                if (alert.parentNode) {
                    alert.remove();
                }
            }, 5000);
        }

        function debounce(func, wait) {
            let timeout;
            return function executedFunction(...args) {
                const later = () => {
                    clearTimeout(timeout);
                    func(...args);
                };
                clearTimeout(timeout);
                timeout = setTimeout(later, wait);
            };
        }
    </script>
</body>
</html>